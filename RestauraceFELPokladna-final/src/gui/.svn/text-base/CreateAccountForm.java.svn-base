/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CreateAccountForm.java
 *
 * Created on 5.4.2009, 11:31:27
 */
package gui;

import java.io.FileNotFoundException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import service.ConfigParser;
import service.ServiceFacade;
import service.Validator;

/**
 * Trida reprezentujici GUI formular pro vytvareni noveho uctu.
 *
 * @author Tomas Hnizdil
 */
public class CreateAccountForm extends AbstractForm {

    private ChooseTableDialog chooseTableDialog = null;
    private ChoosePersonDialog choosePersonDialog = null;
    private ChooseDiscountTypeDialog chooseDiscountTypeDialog = null;
    private ChooseAccountStatusTypeDialog chooseAccountStatusTypeDialog = null;
    private StatusBar statusBar = null;
    private JFrame parent = null;

    /**
     * Konstruktor tridy CreateAccountForm.
     *
     * @param parent
     * @param bar
     * @throws java.rmi.RemoteException
     * @throws java.rmi.NotBoundException
     * @throws java.io.FileNotFoundException
     */
    public CreateAccountForm(JFrame parent, StatusBar bar) throws FileNotFoundException, NotBoundException, RemoteException {
        this.parent = parent;
        this.statusBar = bar;
        initComponents();
        initTable();
        refresh();
        clearFields();
    }

    /**
     * Metoda prenastavuje statusBar.
     *
     * @throws java.rmi.RemoteException
     * @throws java.rmi.NotBoundException
     * @throws java.io.FileNotFoundException
     */
    protected void refresh() throws FileNotFoundException, NotBoundException, RemoteException {
        statusBar.setMessage("Tento formulář slouží k vytváření nového účtu.");
    }

    /**
     * Metoda kontrolujici spravnost vyplnenych udaju.
     *
     * @return Vraci index urcujici vstupni komponentu, ktera obsahuje
     * neplatny vstup. Pokud je vse vporadku tak navraci 0.
     */
    protected int isValidInput() {
        if (!Validator.isText(jTextFieldName)) return 1;
        if (!Validator.isText(jTextFieldAccountStatusType)) return 2;
        return 0;
    }

    /**
     * Metoda inicializujici tabulku.          
     */
    protected void initTable() {
    }

    /**
     * Metoda aktualizuje tabulku.
     *
     * @throws java.rmi.RemoteException
     * @throws java.rmi.NotBoundException
     * @throws java.io.FileNotFoundException
     */
    protected void refreshTable() throws FileNotFoundException, NotBoundException, RemoteException {
    }

    /**
     * Metoda navraci tabulku (instanci tridy JTable).
     *
     * @return instance tridy JTable
     */
    public JTable getTable() {
        return null;
    }

    /**
     * Metoda nahraje do vstupniho pole hodnotu parametru predavaneho z dialogu
     * ChoosePersonDialog.
     *
     * @param person
     */
    protected void fillPerson(String person) {
        jTextFieldPerson.setText(person);
    }

    /**
     * Metoda nahraje do vstupniho pole hodnotu parametru predavaneho z dialogu
     * ChooseTaleDialog.
     *
     * @param table
     */
    protected void fillTable(String table) {
        jTextFieldTable.setText(table);
    }

    /**
     * Metoda nahraje do vstupniho pole hodnotu parametru predavaneho z dialogu
     * ChooseDiscountTypeDialog.
     *
     * @param discountType
     */
    protected void fillDiscountType(String discountType) {
        jTextFieldDiscountType.setText(discountType);
    }

    /**
     * Metoda nahraje do vstupniho pole hodnotu parametru predavaneho z dialogu
     * ChooseAccountStatusTypeDialog.
     *
     * @param accountStatusType
     */
    protected void fillAccountStatusType(String accountStatusType) {
        jTextFieldAccountStatusType.setText(accountStatusType);
    }

    /**
     * Metoda cisti vsechny vstupni formulare, formular pro datum nastavuje na
     * aktualni datum a u comboBoxu nastavuje aktualni vybranou polozku na
     * prvni polozku daneho comboBoxu.
     */
    protected void clearFields() {
        Validator.clearTextField(jTextFieldName);
        Validator.clearTextField(jTextFieldTable);
        Validator.clearTextField(jTextFieldPerson);
        Validator.clearTextField(jTextFieldDiscountType);
        Validator.clearTextField(jTextFieldAccountStatusType);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelName = new javax.swing.JLabel();
        jLabelTable = new javax.swing.JLabel();
        jLabelPerson = new javax.swing.JLabel();
        jLabelDiscountType = new javax.swing.JLabel();
        jTextFieldDiscountType = new javax.swing.JTextField();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldTable = new javax.swing.JTextField();
        jTextFieldPerson = new javax.swing.JTextField();
        jButtonAssignToTable = new javax.swing.JButton();
        jButtonAssignToPerson = new javax.swing.JButton();
        jButtonChooseDiscountType = new javax.swing.JButton();
        jLabelInfoText = new javax.swing.JLabel();
        jButtonDelete = new javax.swing.JButton();
        jButtonOK = new javax.swing.JButton();
        jButtonChooseAccountStatusType = new javax.swing.JButton();
        jLabelAccountStatusType = new javax.swing.JLabel();
        jTextFieldAccountStatusType = new javax.swing.JTextField();

        jLabelName.setText("Název účtu");

        jLabelTable.setText("Stůl");

        jLabelPerson.setText("Osoba");

        jLabelDiscountType.setText("Typ slevy");

        jTextFieldDiscountType.setEditable(false);

        jTextFieldTable.setEditable(false);

        jTextFieldPerson.setEditable(false);

        jButtonAssignToTable.setText("Přiřadit stolu");
        jButtonAssignToTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAssignToTableActionPerformed(evt);
            }
        });

        jButtonAssignToPerson.setText("Přiřadit osobě");
        jButtonAssignToPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAssignToPersonActionPerformed(evt);
            }
        });

        jButtonChooseDiscountType.setText("Vybrat typ slevy");
        jButtonChooseDiscountType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChooseDiscountTypeActionPerformed(evt);
            }
        });

        jLabelInfoText.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabelInfoText.setText("Vytvořit nový účet");

        jButtonDelete.setText("Vymazat");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonOK.setText("Vytvořit účet");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jButtonChooseAccountStatusType.setText("Nastavit stav");
        jButtonChooseAccountStatusType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChooseAccountStatusTypeActionPerformed(evt);
            }
        });

        jLabelAccountStatusType.setText("Stav");

        jTextFieldAccountStatusType.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelInfoText)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelDiscountType)
                            .addComponent(jLabelTable)
                            .addComponent(jLabelPerson)
                            .addComponent(jLabelName)
                            .addComponent(jLabelAccountStatusType))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldAccountStatusType, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(jTextFieldName, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(jTextFieldTable, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(jTextFieldPerson, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonOK)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonDelete))
                            .addComponent(jTextFieldDiscountType, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonChooseAccountStatusType, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(jButtonChooseDiscountType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonAssignToPerson, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(jButtonAssignToTable, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelInfoText)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelName)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTable)
                    .addComponent(jTextFieldTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAssignToTable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPerson)
                    .addComponent(jTextFieldPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAssignToPerson))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDiscountType)
                    .addComponent(jTextFieldDiscountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonChooseDiscountType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonChooseAccountStatusType)
                    .addComponent(jLabelAccountStatusType)
                    .addComponent(jTextFieldAccountStatusType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOK)
                    .addComponent(jButtonDelete))
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAssignToPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAssignToPersonActionPerformed
        try {
            choosePersonDialog = new ChoosePersonDialog(parent, true, this);
            choosePersonDialog.setVisible(true);
            refresh();
        } catch (FileNotFoundException fnfe) {
            JOptionPane.showMessageDialog(this, "Konfigurační soubor \"" + ConfigParser.getConfigFile() + "\" nebyl nalezen.", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Nelze navázat spojení se serverem.", "Chyba komunikace", JOptionPane.ERROR_MESSAGE);
        }
}//GEN-LAST:event_jButtonAssignToPersonActionPerformed

    private void jButtonAssignToTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAssignToTableActionPerformed
        try {
            chooseTableDialog = new ChooseTableDialog(parent, true, this);
            chooseTableDialog.setVisible(true);
            refresh();
        } catch (FileNotFoundException fnfe) {
            JOptionPane.showMessageDialog(this, "Konfigurační soubor \"" + ConfigParser.getConfigFile() + "\" nebyl nalezen.", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Nelze navázat spojení se serverem.", "Chyba komunikace", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAssignToTableActionPerformed

    private void jButtonChooseDiscountTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChooseDiscountTypeActionPerformed
        try {
            chooseDiscountTypeDialog = new ChooseDiscountTypeDialog(parent, true, this);
            chooseDiscountTypeDialog.setVisible(true);
            refresh();
        } catch (FileNotFoundException fnfe) {
            JOptionPane.showMessageDialog(this, "Konfigurační soubor \"" + ConfigParser.getConfigFile() + "\" nebyl nalezen.", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Nelze navázat spojení se serverem.", "Chyba komunikace", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonChooseDiscountTypeActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        clearFields();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        int i = isValidInput();
        switch (i) {
            case 0:
                String name = jTextFieldName.getText();

                boolean isOK;
                try {
                    String status = jTextFieldAccountStatusType.getText();
                    int statusId = ServiceFacade.getInstance().getAccountStatusTypeByName(status).getAccountStatusTypeId();
                    String stul = jTextFieldTable.getText();
                    int stulId = 0;
                    if (!stul.equals("")) {
                        stulId = Integer.parseInt(stul);
                    }
                    String user = jTextFieldPerson.getText();
                    int userId = 0;
                    if (!user.equals("")) {
                        userId = ServiceFacade.getInstance().getUserByUsername(user).getUserId();
                    }
                    String discountType = jTextFieldDiscountType.getText();
                    int discountTypeId = 0;
                    if (!discountType.equals("")) {
                        discountTypeId = ServiceFacade.getInstance().getDiscountTypeByName(discountType).getDiscountTypeId();
                    }
                    isOK = ServiceFacade.getInstance().createAccount(name, statusId, stulId, userId, discountTypeId);
                    if (!isOK) {
                        JOptionPane.showMessageDialog(this, "Účet nemohl být vytvořen, protože účet se stejným názvem již existuje.", "Účet", JOptionPane.INFORMATION_MESSAGE);
                        return;
                    }
                } catch (FileNotFoundException fnfe) {
                    JOptionPane.showMessageDialog(this, "Konfigurační soubor \"" + ConfigParser.getConfigFile() + "\" nebyl nalezen.", "Chyba", JOptionPane.ERROR_MESSAGE);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Nelze navázat spojení se serverem.", "Chyba komunikace", JOptionPane.ERROR_MESSAGE);
                }
                clearFields();
                break;
            case 1:
                JOptionPane.showMessageDialog(this, "Údaj o názvu účtu musí být vyplněn.", "Nový účet", JOptionPane.INFORMATION_MESSAGE);
                break;
            case 2:
                JOptionPane.showMessageDialog(this, "Údaj o stavu účtu musí být vyplněn.", "Nový účet", JOptionPane.INFORMATION_MESSAGE);
                break;
            default:
                break;
        }
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jButtonChooseAccountStatusTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChooseAccountStatusTypeActionPerformed
        try {
            chooseAccountStatusTypeDialog = new ChooseAccountStatusTypeDialog(parent, true, this);
            chooseAccountStatusTypeDialog.setVisible(true);
            refresh();
        } catch (FileNotFoundException fnfe) {
            JOptionPane.showMessageDialog(this, "Konfigurační soubor \"" + ConfigParser.getConfigFile() + "\" nebyl nalezen.", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Nelze navázat spojení se serverem.", "Chyba komunikace", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonChooseAccountStatusTypeActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAssignToPerson;
    private javax.swing.JButton jButtonAssignToTable;
    private javax.swing.JButton jButtonChooseAccountStatusType;
    private javax.swing.JButton jButtonChooseDiscountType;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JLabel jLabelAccountStatusType;
    private javax.swing.JLabel jLabelDiscountType;
    private javax.swing.JLabel jLabelInfoText;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelPerson;
    private javax.swing.JLabel jLabelTable;
    private javax.swing.JTextField jTextFieldAccountStatusType;
    private javax.swing.JTextField jTextFieldDiscountType;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPerson;
    private javax.swing.JTextField jTextFieldTable;
    // End of variables declaration//GEN-END:variables
}
